{"version":3,"file":"autorotate-keypoints.js","sources":["../../src/plugins/autorotate-keypoints/index.js"],"sourcesContent":["import { AbstractPlugin, CONSTANTS, PSVError, utils } from 'photo-sphere-viewer';\n\n/**\n * @typedef {PSV.ExtendedPosition|string|Object} PSV.plugins.AutorotateKeypointsPlugin.Keypoints\n * @summary Definition of keypoints for automatic rotation, can be a position object, a marker id or an object with the following properties\n * @property {string} [markerId]\n * @property {PSV.ExtendedPosition} [position]\n * @property {string|{content: string, position: string}} [tooltip]\n * @property {number} [pause=0]\n */\n\n/**\n * @typedef {Object} PSV.plugins.AutorotateKeypointsPlugin.Options\n * @property {boolean} [startFromClosest=true] - start from the closest keypoint instead of the first keypoint\n * @property {PSV.plugins.AutorotateKeypointsPlugin.Keypoints[]} keypoints\n */\n\n/**\n * @summary Number of steps between each points\n * @type {number}\n * @constant\n * @private\n */\nconst NUM_STEPS = 16;\n\nconst serializePt = position => [position.longitude, position.latitude];\n\n\n/**\n * @summary Replaces the standard autorotate animation by a smooth transition between multiple points\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport default class AutorotateKeypointsPlugin extends AbstractPlugin {\n\n  static id = 'autorotate-keypoints';\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.AutorotateKeypointsPlugin.Options} [options]\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {Object}\n     * @property {number} idx -  current index in keypoints\n     * @property {number[][]} curve - curve between idx and idx + 1\n     * @property {number[]} startPt - start point of the current step\n     * @property {number[]} endPt - end point of the current step\n     * @property {number} startTime - start time of the current step\n     * @property {number} stepDuration - expected duration of the step\n     * @property {number} remainingPause - time remaining for the pause\n     * @property {number} lastTime - previous timestamp in render loop\n     * @property {PSV.components.Tooltip} tooltip - currently displayed tooltip\n     * @private\n     */\n    this.state = {};\n\n    /**\n     * @member {PSV.plugins.AutorotateKeypointsPlugin.Options}\n     * @private\n     */\n    this.config = {\n      startFromClosest: true,\n      ...options,\n      keypoints       : null,\n    };\n\n    /**\n     * @type {PSV.plugins.MarkersPlugin}\n     * @private\n     */\n    this.markers = this.psv.getPlugin('markers');\n\n    if (options?.keypoints) {\n      this.setKeypoints(options.keypoints);\n    }\n\n    this.psv.on(CONSTANTS.EVENTS.AUTOROTATE, this);\n  }\n\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.AUTOROTATE, this);\n\n    delete this.keypoints;\n    delete this.state;\n\n    super.destroy();\n  }\n\n  handleEvent(e) {\n    if (e.type === CONSTANTS.EVENTS.AUTOROTATE) {\n      this.__configure();\n    }\n  }\n\n  /**\n   * @summary Changes the keypoints\n   * @param {PSV.plugins.AutorotateKeypointsPlugin.Keypoints[]} keypoints\n   */\n  setKeypoints(keypoints) {\n    if (keypoints?.length < 2) {\n      throw new PSVError('At least two points are required');\n    }\n\n    this.keypoints = utils.clone(keypoints);\n\n    if (this.keypoints) {\n      this.keypoints.forEach((pt, i) => {\n        if (typeof pt === 'string') {\n          // eslint-disable-next-line no-param-reassign\n          pt = { markerId: pt };\n        }\n        else if (this.psv.dataHelper.isExtendedPosition(pt)) {\n          // eslint-disable-next-line no-param-reassign\n          pt = { position: pt };\n        }\n        if (pt.markerId) {\n          if (!this.markers) {\n            throw new PSVError(`Keypoint #${i} references a marker but markers plugin is not loaded`);\n          }\n          const marker = this.markers.getMarker(pt.markerId);\n          pt.position = serializePt(marker.props.position);\n        }\n        else if (pt.position) {\n          pt.position = serializePt(this.psv.dataHelper.cleanPosition(pt.position));\n        }\n        else {\n          throw new PSVError(`Keypoint #${i} is missing marker or position`);\n        }\n\n        if (typeof pt.tooltip === 'string') {\n          pt.tooltip = { content: pt.tooltip };\n        }\n\n        this.keypoints[i] = pt;\n      });\n    }\n\n    this.__configure();\n  }\n\n  /**\n   * @private\n   */\n  __configure() {\n    if (!this.psv.isAutorotateEnabled() || !this.keypoints) {\n      this.__hideTooltip();\n      this.state = {};\n      return;\n    }\n\n    this.state = {\n      idx           : -1,\n      curve         : [],\n      startPt       : null,\n      endPt         : null,\n      startTime     : null,\n      stepDuration  : null,\n      remainingPause: null,\n      lastTime      : null,\n      tooltip       : null,\n    };\n\n    if (this.config.startFromClosest) {\n      const index = this.__findMinIndex(this.keypoints, (keypoint) => {\n        return utils.greatArcDistance(keypoint.position, serializePt(this.psv.prop.position));\n      });\n\n      this.keypoints.push(...this.keypoints.splice(0, index));\n    }\n\n    const autorotateCb = (e, timestamp) => {\n      // initialisation\n      if (!this.state.startTime) {\n        this.state.endPt = serializePt(this.psv.prop.position);\n        this.__nextStep();\n\n        this.state.startTime = timestamp;\n        this.state.lastTime = timestamp;\n      }\n\n      this.__nextFrame(timestamp);\n    };\n\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_RENDER, this.psv.prop.autorotateCb);\n    this.psv.prop.autorotateCb = autorotateCb;\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_RENDER, this.psv.prop.autorotateCb);\n  }\n\n  /**\n   * @private\n   */\n  __incrementIdx() {\n    this.state.idx++;\n    if (this.state.idx === this.keypoints.length) {\n      this.state.idx = 0;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __showTooltip() {\n    const keypoint = this.keypoints[this.state.idx];\n\n    if (keypoint.tooltip) {\n      const position = this.psv.dataHelper.vector3ToViewerCoords(this.psv.prop.direction);\n\n      this.state.tooltip = this.psv.tooltip.create({\n        content : keypoint.tooltip.content,\n        position: keypoint.tooltip.position,\n        top     : position.y,\n        left    : position.x,\n      });\n    }\n    else if (keypoint.markerId) {\n      const marker = this.markers.getMarker(keypoint.markerId);\n      marker.showTooltip();\n      this.state.tooltip = marker.tooltip;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __hideTooltip() {\n    if (this.state.tooltip) {\n      const keypoint = this.keypoints[this.state.idx];\n\n      if (keypoint.tooltip) {\n        this.state.tooltip.hide();\n      }\n      else if (keypoint.markerId) {\n        const marker = this.markers.getMarker(keypoint.markerId);\n        marker.hideTooltip();\n      }\n\n      this.state.tooltip = null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __nextPoint() {\n    // get the 4 points necessary to compute the current movement\n    // one point before and two points before current\n    const workPoints = [];\n    if (this.state.idx === -1) {\n      workPoints.push(\n        serializePt(this.psv.prop.position),\n        serializePt(this.psv.prop.position),\n        this.keypoints[0].position,\n        this.keypoints[1].position\n      );\n    }\n    else {\n      for (let i = -1; i < 3; i++) {\n        const keypoint = this.state.idx + i < 0\n          ? this.keypoints[this.keypoints.length - 1]\n          : this.keypoints[(this.state.idx + i) % this.keypoints.length];\n        workPoints.push(keypoint.position);\n      }\n    }\n\n    // apply offsets to avoid crossing the origin\n    const workPoints2 = [workPoints[0].slice(0)];\n\n    let k = 0;\n    for (let i = 1; i <= 3; i++) {\n      const d = workPoints[i - 1][0] - workPoints[i][0];\n      if (d > Math.PI) { // crossed the origin left to right\n        k += 1;\n      }\n      else if (d < -Math.PI) { // crossed the origin right to left\n        k -= 1;\n      }\n      if (k !== 0 && i === 1) {\n        // do not modify first point, apply the reverse offset the the previous point instead\n        workPoints2[0][0] -= k * 2 * Math.PI;\n        k = 0;\n      }\n      workPoints2.push([workPoints[i][0] + k * 2 * Math.PI, workPoints[i][1]]);\n    }\n\n    // only keep the curve for the current movement\n    this.state.curve = this.__getCurvePoints(workPoints2, 0.6, NUM_STEPS)\n      .slice(NUM_STEPS, NUM_STEPS * 2);\n\n    if (this.state.idx !== -1) {\n      this.state.remainingPause = this.keypoints[this.state.idx].pause;\n\n      if (this.state.remainingPause) {\n        this.__showTooltip();\n      }\n      else {\n        this.__incrementIdx();\n      }\n    }\n    else {\n      this.__incrementIdx();\n    }\n  }\n\n  /**\n   * @private\n   */\n  __nextStep() {\n    if (this.state.curve.length === 0) {\n      this.__nextPoint();\n\n      // reset transformation made to the previous point\n      this.state.endPt[0] = utils.parseAngle(this.state.endPt[0]);\n    }\n\n    // target next point\n    this.state.startPt = this.state.endPt;\n    this.state.endPt = this.state.curve.shift();\n\n    // compute duration from distance and speed\n    const distance = utils.greatArcDistance(this.state.startPt, this.state.endPt);\n    this.state.stepDuration = distance * 1000 / Math.abs(this.psv.config.autorotateSpeed);\n\n    if (distance === 0) { // edge case\n      this.__nextStep();\n    }\n  }\n\n  /**\n   * @private\n   */\n  __nextFrame(timestamp) {\n    const ellapsed = timestamp - this.state.lastTime;\n    this.state.lastTime = timestamp;\n\n    // currently paused\n    if (this.state.remainingPause) {\n      this.state.remainingPause = Math.max(0, this.state.remainingPause - ellapsed);\n      if (this.state.remainingPause > 0) {\n        return;\n      }\n      else {\n        this.__hideTooltip();\n        this.__incrementIdx();\n        this.state.startTime = timestamp;\n      }\n    }\n\n    let progress = (timestamp - this.state.startTime) / this.state.stepDuration;\n    if (progress >= 1) {\n      this.__nextStep();\n      progress = 0;\n      this.state.startTime = timestamp;\n    }\n\n    this.psv.rotate({\n      longitude: this.state.startPt[0] + (this.state.endPt[0] - this.state.startPt[0]) * progress,\n      latitude : this.state.startPt[1] + (this.state.endPt[1] - this.state.startPt[1]) * progress,\n    }, true);\n  }\n\n  /**\n   * @summary Interpolate curvature points using cardinal spline\n   * {@link https://stackoverflow.com/a/15528789/1207670}\n   * @param {number[][]} pts\n   * @param {number} [tension=0.5]\n   * @param {number} [numOfSegments=16]\n   * @returns {number[][]}\n   * @private\n   */\n  __getCurvePoints(pts, tension = 0.5, numOfSegments = 16) {\n    const res = [];\n\n    // The algorithm require a previous and next point to the actual point array.\n    const _pts = pts.slice(0);\n    _pts.unshift(pts[0]);\n    _pts.push(pts[pts.length - 1]);\n\n    // 1. loop through each point\n    // 2. loop through each segment\n    for (let i = 1; i < _pts.length - 2; i++) {\n      // calc tension vectors\n      const t1x = (_pts[i + 1][0] - _pts[i - 1][0]) * tension;\n      const t2x = (_pts[i + 2][0] - _pts[i][0]) * tension;\n\n      const t1y = (_pts[i + 1][1] - _pts[i - 1][1]) * tension;\n      const t2y = (_pts[i + 2][1] - _pts[i][1]) * tension;\n\n      for (let t = 1; t <= numOfSegments; t++) {\n        // calc step\n        const st = t / numOfSegments;\n\n        const st3 = Math.pow(st, 3);\n        const st2 = Math.pow(st, 2);\n\n        // calc cardinals\n        const c1 = 2 * st3 - 3 * st2 + 1;\n        const c2 = -2 * st3 + 3 * st2;\n        const c3 = st3 - 2 * st2 + st;\n        const c4 = st3 - st2;\n\n        // calc x and y cords with common control vectors\n        const x = c1 * _pts[i][0] + c2 * _pts[i + 1][0] + c3 * t1x + c4 * t2x;\n        const y = c1 * _pts[i][1] + c2 * _pts[i + 1][1] + c3 * t1y + c4 * t2y;\n\n        // store points in array\n        res.push([x, y]);\n      }\n    }\n\n    return res;\n  }\n\n  __findMinIndex(array, mapper) {\n    let idx = 0;\n    let current = Number.MAX_VALUE;\n\n    array.forEach((item, i) => {\n      const value = mapper ? mapper(item) : item;\n      if (value < current) {\n        current = value;\n        idx = i;\n      }\n    });\n\n    return idx;\n  }\n\n}\n"],"names":["NUM_STEPS","serializePt","position","longitude","latitude","AutorotateKeypointsPlugin","psv","options","state","config","startFromClosest","keypoints","markers","getPlugin","setKeypoints","on","CONSTANTS","EVENTS","AUTOROTATE","destroy","off","handleEvent","e","type","__configure","length","PSVError","utils","clone","forEach","pt","i","markerId","dataHelper","isExtendedPosition","marker","getMarker","props","cleanPosition","tooltip","content","isAutorotateEnabled","__hideTooltip","idx","curve","startPt","endPt","startTime","stepDuration","remainingPause","lastTime","index","__findMinIndex","keypoint","greatArcDistance","prop","push","splice","autorotateCb","timestamp","__nextStep","__nextFrame","BEFORE_RENDER","__incrementIdx","__showTooltip","vector3ToViewerCoords","direction","create","top","y","left","x","showTooltip","hide","hideTooltip","__nextPoint","workPoints","workPoints2","slice","k","d","Math","PI","__getCurvePoints","pause","parseAngle","shift","distance","abs","autorotateSpeed","ellapsed","max","progress","rotate","pts","tension","numOfSegments","res","_pts","unshift","t1x","t2x","t1y","t2y","t","st","st3","pow","st2","c1","c2","c3","c4","array","mapper","current","Number","MAX_VALUE","item","value","AbstractPlugin","id"],"mappings":"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"}